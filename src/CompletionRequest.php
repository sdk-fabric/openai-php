<?php
/**
 * CompletionRequest automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

namespace SdkFabric\Openai;

use PSX\Schema\Attribute\Description;
use PSX\Schema\Attribute\Key;

#[Description('')]
class CompletionRequest implements \JsonSerializable, \PSX\Record\RecordableInterface
{
    #[Description('')]
    protected ?string $model = null;
    /**
     * @var array<CompletionMessage>|null
     */
    #[Description('')]
    protected ?array $messages = null;
    #[Key('frequency_penalty')]
    #[Description('')]
    protected ?float $frequencyPenalty = null;
    /**
     * @var \PSX\Record\Record<int>|null
     */
    #[Key('logit_bias')]
    #[Description('')]
    protected ?\PSX\Record\Record $logitBias = null;
    #[Description('')]
    protected ?bool $logprobs = null;
    #[Key('max_completion_tokens')]
    #[Description('')]
    protected ?int $maxCompletionTokens = null;
    /**
     * @var \PSX\Record\Record<string>|null
     */
    #[Description('')]
    protected ?\PSX\Record\Record $metadata = null;
    #[Key('presence_penalty')]
    #[Description('')]
    protected ?float $presencePenalty = null;
    #[Key('reasoning_effort')]
    #[Description('')]
    protected ?string $reasoningEffort = null;
    #[Description('')]
    protected ?int $seed = null;
    #[Key('service_tier')]
    #[Description('')]
    protected ?string $serviceTier = null;
    /**
     * @var array<string>|null
     */
    #[Description('')]
    protected ?array $stop = null;
    #[Description('')]
    protected ?bool $store = null;
    #[Description('')]
    protected ?float $temperature = null;
    #[Key('top_logprobs')]
    #[Description('')]
    protected ?int $topLogprobs = null;
    #[Key('top_p')]
    #[Description('')]
    protected ?float $topP = null;
    #[Description('')]
    protected ?string $user = null;
    public function setModel(?string $model): void
    {
        $this->model = $model;
    }
    public function getModel(): ?string
    {
        return $this->model;
    }
    /**
     * @param array<CompletionMessage>|null $messages
     */
    public function setMessages(?array $messages): void
    {
        $this->messages = $messages;
    }
    /**
     * @return array<CompletionMessage>|null
     */
    public function getMessages(): ?array
    {
        return $this->messages;
    }
    public function setFrequencyPenalty(?float $frequencyPenalty): void
    {
        $this->frequencyPenalty = $frequencyPenalty;
    }
    public function getFrequencyPenalty(): ?float
    {
        return $this->frequencyPenalty;
    }
    /**
     * @param \PSX\Record\Record<int>|null $logitBias
     */
    public function setLogitBias(?\PSX\Record\Record $logitBias): void
    {
        $this->logitBias = $logitBias;
    }
    /**
     * @return \PSX\Record\Record<int>|null
     */
    public function getLogitBias(): ?\PSX\Record\Record
    {
        return $this->logitBias;
    }
    public function setLogprobs(?bool $logprobs): void
    {
        $this->logprobs = $logprobs;
    }
    public function getLogprobs(): ?bool
    {
        return $this->logprobs;
    }
    public function setMaxCompletionTokens(?int $maxCompletionTokens): void
    {
        $this->maxCompletionTokens = $maxCompletionTokens;
    }
    public function getMaxCompletionTokens(): ?int
    {
        return $this->maxCompletionTokens;
    }
    /**
     * @param \PSX\Record\Record<string>|null $metadata
     */
    public function setMetadata(?\PSX\Record\Record $metadata): void
    {
        $this->metadata = $metadata;
    }
    /**
     * @return \PSX\Record\Record<string>|null
     */
    public function getMetadata(): ?\PSX\Record\Record
    {
        return $this->metadata;
    }
    public function setPresencePenalty(?float $presencePenalty): void
    {
        $this->presencePenalty = $presencePenalty;
    }
    public function getPresencePenalty(): ?float
    {
        return $this->presencePenalty;
    }
    public function setReasoningEffort(?string $reasoningEffort): void
    {
        $this->reasoningEffort = $reasoningEffort;
    }
    public function getReasoningEffort(): ?string
    {
        return $this->reasoningEffort;
    }
    public function setSeed(?int $seed): void
    {
        $this->seed = $seed;
    }
    public function getSeed(): ?int
    {
        return $this->seed;
    }
    public function setServiceTier(?string $serviceTier): void
    {
        $this->serviceTier = $serviceTier;
    }
    public function getServiceTier(): ?string
    {
        return $this->serviceTier;
    }
    /**
     * @param array<string>|null $stop
     */
    public function setStop(?array $stop): void
    {
        $this->stop = $stop;
    }
    /**
     * @return array<string>|null
     */
    public function getStop(): ?array
    {
        return $this->stop;
    }
    public function setStore(?bool $store): void
    {
        $this->store = $store;
    }
    public function getStore(): ?bool
    {
        return $this->store;
    }
    public function setTemperature(?float $temperature): void
    {
        $this->temperature = $temperature;
    }
    public function getTemperature(): ?float
    {
        return $this->temperature;
    }
    public function setTopLogprobs(?int $topLogprobs): void
    {
        $this->topLogprobs = $topLogprobs;
    }
    public function getTopLogprobs(): ?int
    {
        return $this->topLogprobs;
    }
    public function setTopP(?float $topP): void
    {
        $this->topP = $topP;
    }
    public function getTopP(): ?float
    {
        return $this->topP;
    }
    public function setUser(?string $user): void
    {
        $this->user = $user;
    }
    public function getUser(): ?string
    {
        return $this->user;
    }
    public function toRecord(): \PSX\Record\RecordInterface
    {
        /** @var \PSX\Record\Record<mixed> $record */
        $record = new \PSX\Record\Record();
        $record->put('model', $this->model);
        $record->put('messages', $this->messages);
        $record->put('frequency_penalty', $this->frequencyPenalty);
        $record->put('logit_bias', $this->logitBias);
        $record->put('logprobs', $this->logprobs);
        $record->put('max_completion_tokens', $this->maxCompletionTokens);
        $record->put('metadata', $this->metadata);
        $record->put('presence_penalty', $this->presencePenalty);
        $record->put('reasoning_effort', $this->reasoningEffort);
        $record->put('seed', $this->seed);
        $record->put('service_tier', $this->serviceTier);
        $record->put('stop', $this->stop);
        $record->put('store', $this->store);
        $record->put('temperature', $this->temperature);
        $record->put('top_logprobs', $this->topLogprobs);
        $record->put('top_p', $this->topP);
        $record->put('user', $this->user);
        return $record;
    }
    public function jsonSerialize(): object
    {
        return (object) $this->toRecord()->getAll();
    }
}
