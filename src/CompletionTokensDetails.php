<?php
/**
 * CompletionTokensDetails automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

namespace SdkFabric\Openai;

use PSX\Schema\Attribute\Description;
use PSX\Schema\Attribute\Key;

#[Description('')]
class CompletionTokensDetails implements \JsonSerializable, \PSX\Record\RecordableInterface
{
    #[Key('accepted_prediction_tokens')]
    #[Description('')]
    protected ?int $acceptedPredictionTokens = null;
    #[Key('audio_tokens')]
    #[Description('')]
    protected ?int $audioTokens = null;
    #[Key('reasoning_tokens')]
    #[Description('')]
    protected ?int $reasoningTokens = null;
    #[Key('rejected_prediction_tokens')]
    #[Description('')]
    protected ?int $rejectedPredictionTokens = null;
    public function setAcceptedPredictionTokens(?int $acceptedPredictionTokens): void
    {
        $this->acceptedPredictionTokens = $acceptedPredictionTokens;
    }
    public function getAcceptedPredictionTokens(): ?int
    {
        return $this->acceptedPredictionTokens;
    }
    public function setAudioTokens(?int $audioTokens): void
    {
        $this->audioTokens = $audioTokens;
    }
    public function getAudioTokens(): ?int
    {
        return $this->audioTokens;
    }
    public function setReasoningTokens(?int $reasoningTokens): void
    {
        $this->reasoningTokens = $reasoningTokens;
    }
    public function getReasoningTokens(): ?int
    {
        return $this->reasoningTokens;
    }
    public function setRejectedPredictionTokens(?int $rejectedPredictionTokens): void
    {
        $this->rejectedPredictionTokens = $rejectedPredictionTokens;
    }
    public function getRejectedPredictionTokens(): ?int
    {
        return $this->rejectedPredictionTokens;
    }
    public function toRecord(): \PSX\Record\RecordInterface
    {
        /** @var \PSX\Record\Record<mixed> $record */
        $record = new \PSX\Record\Record();
        $record->put('accepted_prediction_tokens', $this->acceptedPredictionTokens);
        $record->put('audio_tokens', $this->audioTokens);
        $record->put('reasoning_tokens', $this->reasoningTokens);
        $record->put('rejected_prediction_tokens', $this->rejectedPredictionTokens);
        return $record;
    }
    public function jsonSerialize(): object
    {
        return (object) $this->toRecord()->getAll();
    }
}
